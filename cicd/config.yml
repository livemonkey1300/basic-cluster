version: 2.1

name: Terraform CI/CD

jobs:
  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    parameters:
      dir:
        type: string
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform init -chdir=terraform/<<parameters.dir>>  -input=false
            terraform plan -chdir=terraform/<<parameters.dir>> -out tfapply -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    parameters:
      dir:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -chdir=terraform/<<parameters.dir>> -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    parameters:
      dir:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -chdir=terraform/<<parameters.dir>> -destroy -out tfdestroy -var-file terraform.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    parameters:
      dir:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform apply -chdir=terraform/<<parameters.dir>> -auto-approve tfdestroy


  # terraform_plan:
  #   docker:
  #     - image: hashicorp/terraform:light
  #   parameters:
  #     dir:
  #       type: string
  #   steps:
  #     - checkout
  #     - run:
  #         name: Append Bash 
  #         command: apk update && apk add curl curl-dev bash
  #     - run:
  #         name: Change wapper permission
  #         command: chmod +x ./terraform_wrapper.sh
  #     - run:
  #         name: Initialize Terraform
  #         command: /bin/bash terraform_wrapper.sh -a init -d << parameters.dir >> 
  #     - run:
  #         name: Terraform Apply
  #         command: /bin/bash terraform_wrapper.sh -a plan -d << parameters.dir  >>


  # terraform_apply:
  #   docker:
  #     - image: hashicorp/terraform:light
  #   parameters:
  #     dir:
  #       type: string
  #   steps:
  #     - checkout
  #     - run:
  #         name: Append Bash 
  #         command: apk update && apk add curl curl-dev bash
  #     - run:
  #         name: Change wapper permission
  #         command: chmod +x terraform_wrapper.sh
  #     - run:
  #         name: Initialize Terraform
  #         command: ./terraform_wrapper.sh -a init -d << parameters.dir >>
  #     - run:
  #         name: Terraform Apply
  #         command: ./terraform_wrapper.sh -a apply -d << parameters.dir >>

  # terraform_ubuntu:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Configure Terraform
  #       run: |
  #         terraform init \
  #           -backend-config="bucket=my-terraform-state" \
  #           -backend-config="region=us-west-2" \
  #           -backend-config="dynamodb_table=my-terraform-state-lock"
  #     - name: Validate Terraform
  #       run: terraform validate
  #     - name: Apply Terraform
  #       run: terraform apply -auto-approve


workflows:
  version: 2
  plan_approve_apply:
    jobs:
      - plan-apply:
          dir: cluster
      - hold-apply:
          dir: cluster
          type: approval
          requires:
            - plan-apply
      - apply:
          dir: cluster
          requires:
            - hold-apply
      - plan-destroy:
          dir: cluster
          requires:
            - apply
      - hold-destroy:
          dir: cluster
          type: approval
          requires:
            - plan-destroy
      - destroy:
          dir: cluster
          requires:
            - hold-destroy
